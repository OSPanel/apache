name: Build Apache HTTPD Stack (Windows VS17)

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: CMake build type
        type: choice
        required: true
        default: Release
        options: [Release, Debug]
      platform:
        description: Target architecture
        type: choice
        required: true
        default: x64
        options: [x64, x86]
  push:
    branches: [ main ]
    paths:
      - 'build_all.bat'
      - '.github/workflows/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'build_all.bat'
      - '.github/workflows/**'

env:
  BUILD_BASE: C:\Development\Apache24\build
  PREFIX: C:\Apache24
  INSTALL_PDB: OFF

jobs:
  build:
    name: Build Apache with VS17 (MSVC 2022)
    runs-on: windows-2022
    timeout-minutes: 360

    env:
      PLATFORM: ${{ inputs.platform }}
      BUILD_TYPE: ${{ inputs.build_type }}
      BUILD_BASE: C:\Development\Apache24\build
      PREFIX: C:\Apache24
      INSTALL_PDB: OFF

    outputs:
      platform: ${{ steps.outvars.outputs.platform }}
      build_type: ${{ steps.outvars.outputs.build_type }}
      artifact_name: ${{ steps.outvars.outputs.artifact_name }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ensure PLATFORM/BUILD_TYPE defaults
        id: ensure-defaults
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          if (-not $env:PLATFORM -or $env:PLATFORM -eq '') { "PLATFORM=x64" | Out-File -FilePath $env:GITHUB_ENV -Append -Encoding utf8 }
          if (-not $env:BUILD_TYPE -or $env:BUILD_TYPE -eq '') { "BUILD_TYPE=Release" | Out-File -FilePath $env:GITHUB_ENV -Append -Encoding utf8 }
          "Using PLATFORM=$env:PLATFORM, BUILD_TYPE=$env:BUILD_TYPE"

      - name: Enable long paths (Windows)
        shell: pwsh
        run: git config --system core.longpaths true

      - name: Install dependencies (CMake, Perl, NASM, 7zip)
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          choco feature enable -n allowGlobalConfirmation
          choco install cmake --installargs "ADD_CMAKE_TO_PATH=System" --no-progress --yes
          choco install strawberryperl --no-progress --yes
          choco install nasm --no-progress --yes
          choco install 7zip --no-progress --yes
          
          $env:PATH = [System.Environment]::GetEnvironmentVariable("PATH","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("PATH","User")
          cmake --version
          perl -v | Out-Null
          
          if (-not (Get-Command nasm -ErrorAction SilentlyContinue)) {
            $possiblePaths = @(
              'C:\ProgramData\chocolatey\bin',
              'C:\ProgramData\chocolatey\lib\nasm\tools',
              'C:\Program Files\NASM'
            )
            foreach ($path in $possiblePaths) {
              $nasmPath = Join-Path $path 'nasm.exe'
              if (Test-Path $nasmPath) {
                $env:PATH = "$path;$env:PATH"
                "PATH=$env:PATH" | Out-File -FilePath $env:GITHUB_ENV -Append -Encoding utf8
                Write-Host "Added $path to PATH"
                break
              }
            }
          }
          
          nasm -v
          where nasm

      - name: Setup MSVC 2022 (VS17, toolset v143)
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ env.PLATFORM }}
          toolset: 143

      - name: Show MSVC
        shell: cmd
        run: |
          echo Using VS17 toolset v143
          where cl
          where nmake

      - name: Run build script
        shell: cmd
        run: |
          echo Platform=%PLATFORM%
          echo BuildType=%BUILD_TYPE%
          echo BUILD_BASE=%BUILD_BASE%
          echo PREFIX=%PREFIX%
          echo INSTALL_PDB=%INSTALL_PDB%
          dir
          call build_all.bat

      - name: Prepare outputs
        id: outvars
        if: always()
        shell: pwsh
        run: |
          $artifact = "Apache24-$env:PLATFORM-$env:BUILD_TYPE"
          "platform=$env:PLATFORM" | Out-File -FilePath $env:GITHUB_OUTPUT -Append -Encoding utf8
          "build_type=$env:BUILD_TYPE" | Out-File -FilePath $env:GITHUB_OUTPUT -Append -Encoding utf8
          "artifact_name=$artifact" | Out-File -FilePath $env:GITHUB_OUTPUT -Append -Encoding utf8

      - name: Upload build prefix
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.outvars.outputs.artifact_name }}
          path: C:\Apache24\**
          if-no-files-found: warn
          compression-level: 6
          retention-days: 14

      - name: Upload logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs-${{ steps.outvars.outputs.platform }}-${{ steps.outvars.outputs.build_type }}
          path: |
            C:\Development\Apache24\build\**\CMakeFiles\CMakeOutput.log
            C:\Development\Apache24\build\**\CMakeFiles\CMakeError.log
            C:\Development\Apache24\build\**\*.log
          if-no-files-found: ignore

  release:
    name: Draft GitHub Release
    needs: build
    if: github.ref == 'refs/heads/main' && (github.event_name == 'workflow_dispatch' || github.event_name == 'push')
    runs-on: windows-2022
    permissions:
      contents: write

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build.outputs.artifact_name }}
          path: dist

      - name: Create release archive
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          $zip = "Apache24-${{ needs.build.outputs.platform }}-${{ needs.build.outputs.build_type }}-${{ github.run_number }}.zip"
          if (Test-Path "dist") {
            if (Test-Path $zip) { Remove-Item $zip -Force }
            Compress-Archive -Path "dist\*" -DestinationPath $zip -CompressionLevel Optimal
            Write-Host "Zipped: $zip"
          } else {
            Write-Host "dist folder not found; skipping."
          }

      - name: Create GitHub Release (draft)
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          tag_name: build-${{ github.run_number }}
          name: "Apache24 Build #${{ github.run_number }}"
          body: |
            Automated build for commit ${{ github.sha }}.
            Platform: ${{ needs.build.outputs.platform }}
            Build Type: ${{ needs.build.outputs.build_type }}
          files: |
            Apache24-*.zip